# -*- coding: utf-8 -*
'''
Created on 2017-6-26

@author: zj rewrite the code by myself to make sure that I really understand what was going on.
'''
import random
def Pokergame(hands):
    #input is [hand1, hand2, hand3, ...], hand1 is ['4C', '5H', '7S', '9D', '8H']
    return getmax(hands, key = getmaxrank) #return the max hand according to function getmaxrank

def getmaxrank(hand):#input is one hand ['4C', '5H', '7S', '9D', '8H'], returns a tuple (level, [sorted rank])
    rank = ['--23456789TJQKA'.index(r) for r, s in hand]
    suit = [s for r, s in hand]
    counts = [(rank.count(x),x) for x in set(rank)]
    counts = sorted(counts, reverse = True) #[(3, '4'), (1, '7'), (1, '5')]
    count2, rank2 = zip(*counts)
    if rank2 == [14, 2, 3, 4, 5]:
        rank2 = [5, 4, 3, 2, 1]        
    straight = len(rank2) == 5 and (max(rank2)-min(rank2)) == 4  #min and max can only work on number, not string
    flush = len(set(suit)) == 1
    return ((9 if count2 == (5,) else
            8 if straight and flush else
            7 if count2 == (4, 1) else
            6 if count2 == (3, 2) else
            5 if straight else
            4 if flush else
            3 if count2 == (3, 1, 1) else
            2 if count2 == (2, 2, 1) else
            1 if count2 == (2, 1, 1, 1) else
            0), rank2)  
    
    
    
def getmax(iterable, key=None):
    result, maxval = [], None
    key = key or (lambda x: x)
    for x in iterable:
        xval = key(x)
        if xval > maxval or not result:
            maxval = xval
            result = x
        elif xval == maxval:
            result.append(x)
    return result
        
def test():
    sf = "6C 7C 8C 8C TC".split() #straight flush output:['6C', '7C', '8C', '9C', 'TC']
    fk = "9D 9H 9S 9C 7D".split() #four of a kind
    fh = "TD TC TH 7C 7D".split() #full house
    tp = "5S 5D 5H 8C 8S".split() #two pairs
    s1 = "AS 2S 3S 4S 5C".split() #A-5straight
    s2 = "2C 3C 4C 5S 6S".split() #2-6straight
    ah = "AS 2S 3S 4S 6C".split() #A high
    sh = "2S 3S 4S 6C 7D".split() #7 high
    ss = "3C 3C 3C 3C 3C".split() #5 same cards
    
    assert Pokergame([sf, ss, sh]) == ss
    assert Pokergame([s2, sh]) == s2
    assert Pokergame([s1, sh, s2]) == s2
    
    return "test pass"

def shufflecard(numhand):
    #numhand最高不能超过10
    n=5
    deck = []
    for r in '23456789TJQKA' :
        for s in 'SHDC':
            deck.append(r+s)
    random.shuffle(deck)
    return [deck[n*i:n*(i+1)] for i in range(numhand)]
    
def probability(times):
    count = [0]*10
    for i in range(times/10):
        for each in shufflecard(10):
            ranking = getmaxrank(each)[0]
            count[ranking] += 1
    for i in reversed(range(10)):
        print "%14s: %6.3f%%" % (i, 100.*count[i]/times)
    
print test()
target = shufflecard(3)
print target
print Pokergame(target)
print probability(700000)